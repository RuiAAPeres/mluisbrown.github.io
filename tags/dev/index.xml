<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Dev on Michael Brown</title>
    <link>http://michael-brown.net/tags/dev/</link>
    <description>Recent content in Dev on Michael Brown</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>Copyright Â© 2016</copyright>
    <lastBuildDate>Thu, 16 Jun 2016 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://michael-brown.net/tags/dev/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Podcast sponsorship - an experiment</title>
      <link>http://michael-brown.net/2016/podcast-sponsorship---an-experiment/</link>
      <pubDate>Thu, 16 Jun 2016 00:00:00 +0000</pubDate>
      
      <guid>http://michael-brown.net/2016/podcast-sponsorship---an-experiment/</guid>
      <description>&lt;p&gt;I&amp;rsquo;m an iOS developer in my spare time. You know, on &lt;a href=&#34;http://www.theonion.com/blogpost/find-the-thing-youre-most-passionate-about-then-do-31742&#34;&gt;evenings, and weekends&lt;/a&gt;. I recently launched an app called &lt;a href=&#34;http://memories.land&#34;&gt;Memories&lt;/a&gt;. I created the app mainly because it was an app that I wanted to have. I thought that if I wanted to use an app like this (and I use it every day), then maybe other people would like an app like that too. The app replicates a feature found in cloud photo services like &lt;a href=&#34;http://everpix.com&#34;&gt;Everpix&lt;/a&gt; (RIP) and &lt;a href=&#34;http://picturelife.com&#34;&gt;Picturelife&lt;/a&gt; that shows you all the photos you took on a certain date (usually today) in previous years. However, Apple&amp;rsquo;s iCloud Photo Library or Photos app do not have this feature &lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:5de681bed91f9725297fa52e932964fd:sherlocked&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:5de681bed91f9725297fa52e932964fd:sherlocked&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;. When I switched to iCloud Photo Library from Picturelife I really missed the feature, so that&amp;rsquo;s what led to my Memories app.&lt;/p&gt;

&lt;p&gt;I launched the app at the start of the year. I tried, and failed, to get some well known Apple bloggers to mention the app. I did eventually get a mention in the MacStories newsletter sent only to subscribers. I was getting roughly 5 downloads a day. It steamed right into the App Store Top 10,000. Still, I made the app for myself, right? So what&amp;rsquo;s the problem? Well, I always had this nagging sensation that, if I like the app and use it every day, maybe other people would too, if they only knew it existed. So I weighed up possible ways to promote the app and settled on podcast sponsorship as probably the best option.&lt;/p&gt;

&lt;p&gt;So, which podcast? It had to be one that I listened to and those include &lt;a href=&#34;http://atp.fm&#34;&gt;ATP&lt;/a&gt;, &lt;a href=&#34;http://daringfireball.net/thetalkshow/&#34;&gt;The Talk Show&lt;/a&gt;, &lt;a href=&#34;https://relay.fm/connected&#34;&gt;Connected&lt;/a&gt;, &lt;a href=&#34;http://mobilecouch.co&#34;&gt;Mobile Couch&lt;/a&gt;, &lt;a href=&#34;https://www.relay.fm/radar&#34;&gt;Under the Radar&lt;/a&gt;, &lt;a href=&#34;https://www.relay.fm/rd&#34;&gt;Reconcilable Differences&lt;/a&gt; and a few others. ATP and The Talk Show have by far the largest audiences, but their sponsorship rates are also &lt;a href=&#34;http://atp.fm/sponsor/&#34;&gt;way&lt;/a&gt; &lt;a href=&#34;http://daringfireball.net/feeds/sponsors/&#34;&gt;beyond&lt;/a&gt; what I can afford. The rates for Connected are much more reasonable and the podcast also has a history of discussing photo management in the context of Apple devices, especially in its previous incarnation as The Prompt. It seemed like the perfect fit. I had also recently heard a spot for James Thompson&amp;rsquo;s &lt;a href=&#34;http://www.pcalc.com/iphone/index.html&#34;&gt;PCalc&lt;/a&gt; on Connected. I was originally going to go only for a single spot, but Stephen Hackett convinced me to go for three for a total the was within what I had budgeted for promoting the app. Without knowing how this would go, I had mentally written off that money, I had to be prepared to not make back a single penny of it.&lt;/p&gt;

&lt;p&gt;It&amp;rsquo;s a good thing I has mentally written off the money. Because now, a couple of months after the last spot on Connected, I have to actually write off the money.&lt;/p&gt;

&lt;p&gt;Prior to the sponsorship, I was getting 100-150 downloads a month, of which roughly 10% went on to buy the $2 In App Purchase to unlock all the features of the app. During April, when I had sponsorship spots on &lt;a href=&#34;https://www.relay.fm/connected/86&#34;&gt;two&lt;/a&gt; &lt;a href=&#34;https://www.relay.fm/connected/87&#34;&gt;consecutive&lt;/a&gt; episodes of Connected, I got 450 downloads, of which roughtly 25% of users went on to buy the In App Purchase.&lt;/p&gt;

&lt;p&gt;So, I got three fold increase in downloads and those new downloads were from people much more likely to buy the IAP to unlock all the features of the app. However, Connected gets roughly 18,000 downloads per episode. Only around 5% of listeners looked at the app on the app store, roughly half of those installed it, and roughly a quarter of &lt;em&gt;those&lt;/em&gt; bought the in app purchase. At best I only got back about $200 of what the sponsorship cost me (a lot more).&lt;/p&gt;

&lt;p&gt;You hear a lot about podcast sponsorship, and that it really works. Well, it doesn&amp;rsquo;t always work. I&amp;rsquo;m fortunate that I was able to afford to try it out and it not be a big deal if it didn&amp;rsquo;t work out. But let this be a warning that podcast sponsorship is not the silver bullet to make your app a success.&lt;/p&gt;

&lt;p&gt;My app is highly rated on the app store and all the feedback I&amp;rsquo;ve had from users is extremely positive, so it&amp;rsquo;s not that the app isn&amp;rsquo;t any good. It implements a feature that a lot of people clearly want and that Apple themselves are putting into Photos in iOS 10, so it&amp;rsquo;s not that no one wants this. The app also only has one direct competitor on the app store that I know of. So, what gives? Well, I really don&amp;rsquo;t know. If you have ideas I&amp;rsquo;d love to hear from you on &lt;a href=&#34;https://twitter.com/mluisbrown&#34;&gt;twitter&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:5de681bed91f9725297fa52e932964fd:sherlocked&#34;&gt;Looks like Apple sherlocked me in &lt;a href=&#34;http://www.apple.com/ios/ios10-preview/&#34;&gt;iOS 10&lt;/a&gt;. They even chose exactly the same name!
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:5de681bed91f9725297fa52e932964fd:sherlocked&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Comparing Dates, whilst ignoring the time</title>
      <link>http://michael-brown.net/2016/comparing-dates-whilst-ignoring-the-time/</link>
      <pubDate>Sun, 24 Apr 2016 00:00:00 +0000</pubDate>
      
      <guid>http://michael-brown.net/2016/comparing-dates-whilst-ignoring-the-time/</guid>
      <description>&lt;p&gt;Comparing dates is one of the most common things you have to do as a developer of almost any type of software. At first glance it would seem to be something almost trivially easy. What could possibly go wrong? Well, turns out, quite a lot!&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;m going to highlight just one issue that recently caused an embarassing bug in my app &lt;a href=&#34;http://memories.land&#34;&gt;Memories&lt;/a&gt;. It involved just a simple date comparison, ignoring time, and without crossing timezones.&lt;/p&gt;

&lt;p&gt;I had an array of &lt;code&gt;NSDate&lt;/code&gt; and I wanted to get the index of the date in the array closest to the current date. The code was something like this:&lt;/p&gt;

&lt;script src=&#34;https://gist.github.com/mluisbrown/8808c70899ed278e5e5e3ba06fee4320.js&#34;&gt;&lt;/script&gt;

&lt;p&gt;The dates in the array have their time components all set to zero as I don&amp;rsquo;t care about the time, I just want to compare the date. To do the actual date comparison so that the time component is ignored, I&amp;rsquo;m using the rather handy &lt;code&gt;NSCalendar&lt;/code&gt; method &lt;a href=&#34;https://developer.apple.com/library/ios/documentation/Cocoa/Reference/Foundation/Classes/NSCalendar_Class/index.html#//apple_ref/occ/instm/NSCalendar/ordinalityOfUnit:inUnit:forDate:&#34;&gt;ordinalityOfUnit:inUnit:forDate:&lt;/a&gt;. If you call this method with &lt;code&gt;.Day&lt;/code&gt; for the &lt;code&gt;smaller&lt;/code&gt; parameter and &lt;code&gt;.Era&lt;/code&gt; for the &lt;code&gt;.Larger&lt;/code&gt; parameter it will give you a sort of Julian Day number&lt;sup class=&#34;footnote-ref&#34; id=&#34;fnref:422d6ebfb03115c00715b16ab4ca818b:julian&#34;&gt;&lt;a rel=&#34;footnote&#34; href=&#34;#fn:422d6ebfb03115c00715b16ab4ca818b:julian&#34;&gt;1&lt;/a&gt;&lt;/sup&gt; that&amp;rsquo;s easy to use for date arithmetic.&lt;/p&gt;

&lt;p&gt;Looking at the code above, you would expect that the closest index when calling &lt;code&gt;let closest = indexOfClosestDate(someDates, toDate: NSDate())&lt;/code&gt; would be 1, since today is closest to, well, today. However, if you run the above code in an Xcode Playground somewhere in the GMT timezone whilst DST is in effect you will see that the result is 2. The &lt;code&gt;NSDate()&lt;/code&gt; for today is comparing as having an ordinal day number matching tomorrow, not today. What the hell is going on?&lt;/p&gt;

&lt;p&gt;Well, the clue is in the phrase &amp;ldquo;somewhere in the GMT timezone whilst DST is in effect&amp;rdquo;. It&amp;rsquo;s one reason I didn&amp;rsquo;t spot this bug in my app until fairly recently as I had done all the development in the winter when DST is not in effect, and I live in Lisbon in Portugal which is in the GMT timezone.&lt;/p&gt;

&lt;p&gt;The following playground should make everything clear (note that the values shown in comments are values I obtained running in the GMT timezone with DST in effect late on April 24th 2016):&lt;/p&gt;

&lt;script src=&#34;https://gist.github.com/mluisbrown/31146f28f3311e62345d5d4ef32be4ed.js&#34;&gt;&lt;/script&gt;

&lt;p&gt;The ordinal day number for &lt;code&gt;today&lt;/code&gt; is 736078. But the ordinal day number for &lt;code&gt;todayMidnight&lt;/code&gt; is 736077. 1 day difference. But how is that possible, since they are the same day? Take a look at the &lt;code&gt;debugDescription&lt;/code&gt; for each variable:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;today&lt;/code&gt;: &amp;ldquo;2016-04-24 21:16:39 +0000&amp;rdquo;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;todayMidnight&lt;/code&gt;: &amp;ldquo;2016-04-23 23:00:00 +0000&amp;rdquo;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You see? &lt;code&gt;todayMidnight&lt;/code&gt; is actually represented as the day &lt;em&gt;before&lt;/em&gt; at 23:00, not today at midnight! The reason for this is that &lt;code&gt;NSDate&lt;/code&gt; internally stores dates in &lt;a href=&#34;https://en.wikipedia.org/wiki/Coordinated_Universal_Time&#34;&gt;UTC&lt;/a&gt;, which is the same as GMT for most purposes. When DST is in effect, the time where I live is one hour ahead of GMT, so today at midnight, in GMT terms, is actually yesterday at 23:00.&lt;/p&gt;

&lt;p&gt;The solution I found for comparing dates where you don&amp;rsquo;t care about the time component is to set the time component to midday (12:00) instead of midnight (00:00). That way, it would take a 12 hour offset due to DST or timezone changes to change the date in UTC terms.&lt;/p&gt;
&lt;div class=&#34;footnotes&#34;&gt;

&lt;hr /&gt;

&lt;ol&gt;
&lt;li id=&#34;fn:422d6ebfb03115c00715b16ab4ca818b:julian&#34;&gt;Well, since I&amp;rsquo;m using the Gregorian calendar, it would be a Gregorian Day Number, which is called a &lt;a href=&#34;https://en.wikipedia.org/wiki/Rata_Die&#34;&gt;Rata Die&lt;/a&gt;
 &lt;a class=&#34;footnote-return&#34; href=&#34;#fnref:422d6ebfb03115c00715b16ab4ca818b:julian&#34;&gt;&lt;sup&gt;[return]&lt;/sup&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Using stride to convert C-style for loops to Swift 2.2</title>
      <link>http://michael-brown.net/2016/using-stride-to-convert-c-style-for-loops-to-swift-2.2/</link>
      <pubDate>Tue, 08 Mar 2016 00:00:00 +0000</pubDate>
      
      <guid>http://michael-brown.net/2016/using-stride-to-convert-c-style-for-loops-to-swift-2.2/</guid>
      <description>&lt;p&gt;With the release of Swift 2.2 in Xcode 7.3 C-style for loops have become &lt;a href=&#34;https://github.com/apple/swift-evolution/blob/master/proposals/0007-remove-c-style-for-loops.md&#34;&gt;deprecated&lt;/a&gt;. The default Xcode fix-it for converting them uses a Range:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;let count = 5
for var index = 0; index &amp;lt; count; index++ {
    doSomething(index)
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;is converted do:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;let count = 5
for index in 0 ..&amp;lt; count {
    doSomething(index)
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;For the vast majority of C-style for loops this will work perfectly well. But there are cases where using a Range not only won&amp;rsquo;t work as expected but will actually crash!&lt;/p&gt;

&lt;p&gt;Consider the case where &lt;code&gt;count&lt;/code&gt; in the above example is -1 (we&amp;rsquo;ll get to why you might do that in a second). The C style loop would finish immediately as &lt;code&gt;index&lt;/code&gt; is already greater than &lt;code&gt;count&lt;/code&gt; on entry. However, the conversion using a Range would crash with:  &lt;code&gt;fatal error: Can&#39;t form Range with end &amp;lt; start&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;So, why on earth might you want have a loop range with an end less than the start? In my app &lt;a href=&#34;http://memories.land&#34;&gt;Memories&lt;/a&gt; (code available on &lt;a href=&#34;https://github.com/mluisbrown/Memories&#34;&gt;GitHub&lt;/a&gt;) I have a View Controller which is an image viewer where you can swipe left and right to navigate a set of images. In order to save memory, I only want to have the current visible image and the ones immediately to the left and to the right of it loaded in memory. As the user swipes through the images, all other images are purged from memory.&lt;/p&gt;

&lt;p&gt;To purge all the images to the left of the visible image I had a loop that looked like this:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;let page = visiblePage
let firstPage = page - 1
let lastPage = page + 1

// Purge anything before the first page
for var index = 0; index &amp;lt; firstPage; ++index {
    purgePage(index)
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If the currently visible image is the first one (&lt;code&gt;page == 0&lt;/code&gt;), then &lt;code&gt;firstPage&lt;/code&gt; will be -1. In the Range version of the loop:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;for index in 0 ..&amp;lt; firstPage {
    purgePage(index)
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;we end up with a Range where the end is less than the start. Boom. Ok, this only happens in the edge case where we are on the first page (and the last page, in a similar case where the start is greater than the end). We could wrap the loop in an &lt;code&gt;if&lt;/code&gt; that only executes the loop when &lt;code&gt;page &amp;gt; 0&lt;/code&gt;. But I really hate writing special logic for edge cases if I can possibly avoid it. It&amp;rsquo;s so much cleaner if your logic handles edge cases by default. So what&amp;rsquo;s the solution? The Swift &lt;a href=&#34;http://swiftdoc.org/v2.1/protocol/Strideable&#34;&gt;&lt;code&gt;Strideable&lt;/code&gt;&lt;/a&gt; Protocol, particularly the &lt;a href=&#34;http://swiftdoc.org/v2.1/protocol/Strideable/#func--stride-to_by_&#34;&gt;&lt;code&gt;stride(to:by:)&lt;/code&gt;&lt;/a&gt; method. As the docs state:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Return the sequence of values (self, self + stride, self + stride + stride, &amp;hellip; last) where last is the last value in the progression that is less than end.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;So, for example: &lt;code&gt;0.stride(to: 5, by: 1)&lt;/code&gt; returns the sequence (0, 1, 2, 3, 4). Importantly, it doesn&amp;rsquo;t matter if the the value passed in the &lt;code&gt;to:&lt;/code&gt; parameter is less than the &lt;code&gt;self&lt;/code&gt; (the start value) so, for example: &lt;code&gt;0.stride(to: -1, by: 1)&lt;/code&gt; returns an empty sequence. So now we can just replace the Range with the sequence returned from &lt;code&gt;stride(to:by:)&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;for index in 0.stride(to: firstPage, by: 1) {
    purgePage(index)
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;the loop to purge the pages &lt;em&gt;after&lt;/em&gt; the current one is similar, using a reverse sequence (&lt;code&gt;pages&lt;/code&gt; here is the array of pages):&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;for index in pages.indices.last?.stride(to: lastPage, by: -1) {
    purgePage(index)
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now that&amp;rsquo;s a lot nicer. No special logic for edge cases!&lt;/p&gt;

&lt;p&gt;We can still improve on this though and make these loops more &amp;lsquo;functional&amp;rsquo; and perhaps more idiomatic Swift using &lt;a href=&#34;http://swiftdoc.org/v2.1/protocol/SequenceType/#func-foreach_&#34;&gt;&lt;code&gt;forEach(_:)&lt;/code&gt;&lt;/a&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-swift&#34;&gt;0.stride(to: firstPage, by: 1).forEach(purgePage)
pages.indices.last?.stride(to: lastPage, by: -1).forEach(purgePage)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now that&amp;rsquo;s looking really elegant. I&amp;rsquo;m tempted to use &lt;code&gt;stride(to:by:).forEach(_:)&lt;/code&gt; to replace all my C style for loops in Swift.  There is a caveat though: you cannot break out of or continue a &lt;code&gt;forEach&lt;/code&gt; iteration with &lt;code&gt;break&lt;/code&gt; or &lt;code&gt;continue&lt;/code&gt;. For those cases just use a &lt;code&gt;stride(to:by:)&lt;/code&gt; sequence with &lt;code&gt;for index in&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Thanks to &lt;a href=&#34;https://twitter.com/NSRenato&#34;&gt;@NSRenato&lt;/a&gt; for the tip on using &lt;code&gt;stride&lt;/code&gt;.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>